name: 'Push on crt environment'

on:
  push:
    paths:
      - 'crt/**'

env:
  TF_LOG: INFO
  TF_INPUT: false

permissions:
    id-token: write
    contents: read

jobs:
  terraform:
    name: 'Terraform Push'
    runs-on: ubuntu-latest
    environment: 
      name: crt

    # Use the Bash shell
    defaults:
      run:
        shell: bash
        working-directory: ./crt

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the preferred version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Log into Azure with OIDC integration if branch is main
    - name: 'Az CLI login for Main branch' 
      if: github.ref == 'refs/heads/main'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Run Terraform init for Main branch
    - name: Terraform Init for Main branch
      id: init-main
      if: github.ref == 'refs/heads/main'
      env:
        TF_STORAGE_ACCOUNT: ${{ vars.TF_STORAGE_ACCOUNT }}
        TF_CONTAINER_NAME: ${{ vars.TF_CONTAINER_NAME }}
        TF_RESOURCE_GROUP_NAME: ${{ vars.TF_RESOURCE_GROUP_NAME }}
        TF_SUBSCRIPTION_ID: ${{ vars.TF_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: terraform init -backend-config="storage_account_name=$TF_STORAGE_ACCOUNT" -backend-config="container_name=$TF_CONTAINER_NAME" -backend-config="resource_group_name=$TF_RESOURCE_GROUP_NAME" -backend-config="subscription_id=$TF_SUBSCRIPTION_ID"

    # Run Terraform apply if branch is main
    - name: Terraform Apply for Main branch
      if: github.ref == 'refs/heads/main'
      id: apply
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: terraform apply -auto-approve

    # Run formatting and validate if the branch is not main
    - name: Terraform Init for other branches
      id: init
      if: github.ref != 'refs/heads/main'
      run: terraform init -backend=false

    # Run a Terraform format
    - name: Terraform format for other branches
      if: github.ref != 'refs/heads/main'
      id: fmt
      run: terraform fmt -check

    # Run a Terraform validate
    - name: Terraform validate for other branches
      id: validate
      if: (success() || failure()) && github.ref != 'refs/heads/main'
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: terraform validate -no-color